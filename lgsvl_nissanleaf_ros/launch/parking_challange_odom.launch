<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!-- Launch file for testing parking_challange algorithms
 need to launch get work:
 - Gergő's algorithm
 - MPC_follower node

 -->



<launch>

 

    <!-- include lidar2d node algorithm from Mátyás 
    <include file="$(find lidar2d)/launchdir/park_goal.launch" /> -->

    <!--Publish necessary topics for MPC  -->
    <node pkg="nissan_bringup" type="bare_planner_odom.py" name="bare_planner_py"/>
    <node pkg="nissan_bringup" type="global_waypoint_monitor_odom.py" name="global_waypoint_monitor_py"/>
    
    <!--include launch file for conversions for /vehicle_cmd topic. MPC_follower node is NOT included-->
    <include file="$(find lgsvl_nissanleaf_ros)/launch/twist_gate.launch" />

    <!-- -->

  <arg name="points_node" default="/points_no_ground" /><!--CHANGE THIS TO READ WHETHER FROM VSCAN OR POINTS_RAW -->
  <arg name="remove_ground" default="false" />
  <arg name="downsample_cloud" default="false" /> <!-- Apply VoxelGrid Filter with the value given by "leaf_size"-->
  <arg name="leaf_size" default="0.12" /><!-- Voxel Grid Filter leaf size-->
  <arg name="cluster_size_min" default="5" /><!-- Minimum number of points to consider a cluster as valid-->
  <arg name="cluster_size_max" default="800" /><!-- Maximum number of points to allow inside a cluster-->
  <arg name="sync" default="false" />
  <arg name="use_diffnormals" default="false" />
  <arg name="pose_estimation" default="false" />
  <arg name="clip_min_height" default="-1.3" />
  <arg name="clip_max_height" default="0.5" />

  <arg name="keep_lanes" default="false" />
  <arg name="keep_lane_left_distance" default="5" />
  <arg name="keep_lane_right_distance" default="5" />
  <arg name="cluster_merge_threshold" default="1.5" />
  <arg name="clustering_distance" default="0.85" />

  <arg name="use_vector_map" default="false" />
  <arg name="wayarea_gridmap_layer" default="wayarea" />

  <arg name="output_frame" default="left_os1/os1_sensor" />

  <arg name="remove_points_upto" default="0.0" />

  <arg name="use_gpu" default="true" />

  <arg name="use_multiple_thres" default="false"/>
  <arg name="clustering_ranges" default="[15,30,45,60]"/><!-- Distances to segment pointcloud -->
  <arg name="clustering_distances"
       default="[0.5,1.1,1.6,2.1,2.6]"/><!-- Euclidean Clustering threshold distance for each segment -->

  <node pkg="lidar_euclidean_cluster_detect" type="lidar_euclidean_cluster_detect"
        name="lidar_euclidean_cluster_detect" output="screen">
    <param name="points_node"
           value="$(arg points_node)"/> <!-- Can be used to select which pointcloud node will be used as input for the clustering -->
    <param name="remove_ground" value="$(arg remove_ground)"/>
    <param name="downsample_cloud" value="$(arg downsample_cloud)"/>
    <param name="leaf_size" value="$(arg leaf_size)"/>
    <param name="cluster_size_min" value="$(arg cluster_size_min)"/>
    <param name="cluster_size_max" value="$(arg cluster_size_max)"/>
    <param name="use_diffnormals" value="$(arg use_diffnormals)"/>
    <param name="pose_estimation" value="$(arg pose_estimation)"/>
    <param name="keep_lanes" value="$(arg keep_lanes)"/>
    <param name="keep_lane_left_distance" value="$(arg keep_lane_left_distance)"/>
    <param name="keep_lane_right_distance" value="$(arg keep_lane_right_distance)"/>
    <param name="clip_min_height" value="$(arg clip_min_height)"/>
    <param name="clip_max_height" value="$(arg clip_max_height)"/>
    <param name="output_frame" value="$(arg output_frame)"/>
    <param name="remove_points_upto" value="$(arg remove_points_upto)"/>
    <param name="clustering_distance" value="$(arg clustering_distance)"/>
    <param name="cluster_merge_threshold" value="$(arg cluster_merge_threshold)"/>
    <param name="use_gpu" value="$(arg use_gpu)"/>
    <param name="use_multiple_thres" value="$(arg use_multiple_thres)"/>
    <param name="clustering_ranges" value="$(arg clustering_ranges)"/><!-- Distances to segment pointcloud -->
    <param name="clustering_distances"
           value="$(arg clustering_distances)"/><!-- Euclidean Clustering threshold distance for each segment -->
  </node>

  <group if="$(arg use_vector_map)">
    <node name="object_roi_filter_clustering" pkg="roi_object_filter" type="roi_object_filter"
          output="screen" ns="/detection/lidar_detector">
      <param name="objects_src_topic" value="/objects"/>
      <param name="wayarea_gridmap_layer" value="$(arg wayarea_gridmap_layer)"/>
      <param name="sync_topics" value="false"/>
      <param name="exception_list" value="[person, bicycle]"/>
    </node>
    <node pkg="detected_objects_visualizer" type="visualize_detected_objects" name="cluster_detect_visualization_01"
          output="screen" ns="/detection/lidar_detector">
      <param name="objects_src_topic" value="/objects_filtered"/>
    </node>
  </group>
  <group unless="$(arg use_vector_map)">
    <node pkg="detected_objects_visualizer" type="visualize_detected_objects" name="cluster_detect_visualization_01"
          output="screen" ns="/detection/lidar_detector">
      <param name="objects_src_topic" value="/objects"/>
    </node>
  </group>


  <!-- MPC -->
  <node pkg="mpc_follower" type="mpc_waypoints_converter" name="mpc_waypoints_converter" output="screen"/>
  <node pkg="mpc_follower" type="mpc_follower" name="mpc_follower" output="screen">
      <param name="ctrl_cmd_interface" value="all"/>
      <param name="in_waypoints_name" value="/mpc_waypoints"/>
      <param name="in_vehicle_status_name" value="/vehicle_status"/>
      <param name="in_selfpose_name" value="/current_pose_local"/>
      <param name="out_twist_name" value="/twist_raw"/>
      <param name="out_vehicle_cmd_name" value="/ctrl_raw"/>

      <!-- paramters -->
      <param name="ctrl_period" value="0.03"/>
      <param name="traj_resample_dist" value="0.1"/>
      <param name="admisible_position_error" value="5"/>
      <param name="admisible_yaw_error_deg" value="90"/>
      <param name="path_smoothing_times" value="1"/>
      <param name="show_debug_info" value="false"/>
      <param name="enable_yaw_recalculation" value="true"/>
      <param name="enable_path_smoothing" value="true"/>
      <param name="path_filter_moving_ave_num" value="35"/>
      <param name="curvature_smoothing_num" value="35"/>
      <param name="steering_lpf_cutoff_hz" value="3"/>
      <param name="qp_solver_type" value="unconstraint_fast"/>
      <param name="qpoases_max_iter" value="500"/>
      <param name="vehicle_model_type" value="kinematics_no_delay"/>
      <param name="mpc_prediction_horizon" value="70"/>
      <param name="mpc_prediction_sampling_time" value="0.1"/>
      <param name="mpc_weight_lat_error" value="5"/>
      <param name="mpc_weight_heading_error" value="0"/>
      <param name="mpc_weight_heading_error_squared_vel_coeff" value="5"/>
      <param name="mpc_weight_steering_input" value="1"/>
      <param name="mpc_weight_steering_input_squared_vel_coeff" value="2.5"/>
      <param name="mpc_weight_lat_jerk" value="0"/>
      <param name="mpc_weight_terminal_lat_error" value="0"/>
      <param name="mpc_weight_terminal_heading_error" value="0"/>
      <param name="mpc_zero_ff_steer_deg" value="2"/>
      <param name="delay_compensation_time" value="0.1"/>
      <param name="vehicle_model_steer_tau" value="0.001"/>
      <param name="vehicle_model_wheelbase" value="2.7"/>
      <param name="steer_lim_deg" value=" 32"/>
      <param name="steering_gear_ratio" value="20"/>
  </node>



</launch>

